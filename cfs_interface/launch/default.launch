<?xml version="1.0"?>

<launch>
  <!-- Topics -->
  <arg name="robot_state_topic" default="/state" />
  <arg name="cbf_state_topic" default="/safety_filter/state" />

  <arg name="disturbance_update_topic" default="/env/disturbance_update" />
  <arg name="actuation_update_topic" default="/env/actuation_update" />
  <arg name="obstacle_update_topic" default="/env/obstacle_update" />
  <arg name="vf_update_topic" default="/safety_filter/vf_update" />

  <arg name="cbf_safe_control_topic" default="/safety_filter/safe_control" />
  <arg name="cbf_nominal_control_topic" default="/safety_filter/nominal_control" />

  <arg name="nominal_control_topic" default="/control/nominal_control" />
  <arg name="stabilizing_control_topic" default="/control/stabilize" />
  <arg name="merged_control_topic" default="/control/merged" />
  <arg name="prioritized_control_topic" default="/control/prioritized" />
  <arg name="control_mode" default="MERGE" />

  <!-- Global parameters arguments -->
  <arg name="dynamics_type" default="quad_near_hover" />
  <arg name="grid_type" default="fine" />
  <!-- Parameters -->
  <param name="init_vf_file" value="$(find cfs_interface)/data/init_vf.npy" />
  <param name="obstacle_file" value="$(find cfs_interface)/data/obstacle.npy" />
  <param name="dynamics_type" value="$(arg dynamics_type)" />
  <param name="grid_type" value="$(arg grid_type)" />
  
  <arg name="config_file" default="default_env.yaml" />

  <arg name="config_file_loc" value="$(find cfs_interface)/config/$(arg config_file)" />


  <rosparam ns="env" file="$(arg config_file_loc)" />

  <node name="hj_reachability"
        pkg="cfs_interface"
        type="hj_reachability_node.py"
        output="screen"
        ns="safety_filter">
    <param name="topics/disturbance_update" value="$(arg disturbance_update_topic)" />
    <param name="topics/actuation_update" value="$(arg actuation_update_topic)" />
    <param name="topics/obstacle_update" value="$(arg obstacle_update_topic)" />
    <param name="topics/vf_update" value="$(arg vf_update_topic)" />
  </node>

  <node name="refine_cbf"
        pkg="cfs_interface"
        type="refine_cbf_node.py"
        output="screen"
        ns="safety_filter">
    <param name="topics/state" value="$(arg cbf_state_topic)" />
    <param name="topics/actuation_update" value="$(arg actuation_update_topic)" />
    <param name="topics/nominal_control" value="$(arg cbf_nominal_control_topic)" />
    <param name="topics/vf_update" value="$(arg vf_update_topic)" />
    <param name="topics/filtered_control" value="$(arg cbf_safe_control_topic)" />
  </node>

  <node name="regular_control_merger"
        pkg="crazyflie_control_merger"
        type="regular_control_merger_node"
        output="screen"
        ns="control">
    <param name="topics/control" value="$(arg stabilizing_control_topic)" />  
    <param name="topics/prioritized_control" value="$(arg prioritized_control_topic)" />
    <param name="topics/merged" value="$(arg merged_control_topic)" />
    <param name="mode" value="$(arg control_mode)" />
  </node>

  <node name="cf_interface"
        pkg="cfs_interface"
        type="cf_interface.py"
        output="screen">
    <param name="topics/robot_state" value="$(arg robot_state_topic)" />
    <param name="topics/cbf_state" value="$(arg cbf_state_topic)" />
    <param name="topics/robot_safe_control" value="$(arg prioritized_control_topic)" />
    <param name="topics/cbf_safe_control" value="$(arg cbf_safe_control_topic)" />
    <param name="topics/robot_nominal_control" value="$(arg nominal_control_topic)" />
    <param name="topics/cbf_nominal_control" value="$(arg cbf_nominal_control_topic)" />
  </node>

  <include file="$(find crazyflie_examples)/launch/sw_hover.launch">
    <arg name="state_topic" value="$(arg robot_state_topic)" />
    <arg name="lqr_control_topic" value="$(arg stabilizing_control_topic)" />
    <arg name="merged_control_topic" value="$(arg merged_control_topic)" />
  </include>
</launch>